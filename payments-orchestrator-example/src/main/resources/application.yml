spring:
  application:
    name: payments-orchestrator
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      enable-auto-commit: false
      isolation-level: read_committed
    producer:
      acks: all
      enable-idempotence: true
  
  datasource:
    url: jdbc:postgresql://localhost:5432/orchestrator_db
    username: orchestrator_user
    password: orchestrator_pass
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  flyway:
    enabled: true
    baseline-on-migrate: true

orchestrator:
  consumer:
    topic: payment-requests
    group-id: payments-orchestrator-group
    concurrency: 3
    max-poll-records: 50
    poll-timeout: PT10S
    enable-auto-commit: false
  
  producer:
    topic: processed-payments
    acks: all
    retries: 5
    request-timeout: PT10S
    enable-idempotence: true
    transaction-id-prefix: payments-tx-
  
  database:
    strategy: RELIABLE
    stale-event-threshold: PT30M
    max-retries: 3
    retention-period: P14D
    bulk-size: 100
  
  resilience:
    initial-backoff: PT2S
    max-backoff: PT2M
    backoff-multiplier: 2.0
    enable-circuit-breaker: true
    circuit-breaker-failure-threshold: 5
    circuit-breaker-recovery-timeout: PT1M
  
  monitoring:
    enable-metrics: true
    enable-health-checks: true
    metrics-prefix: payments-orchestrator

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.orchestrator: DEBUG
    org.springframework.kafka: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/payments-orchestrator.log