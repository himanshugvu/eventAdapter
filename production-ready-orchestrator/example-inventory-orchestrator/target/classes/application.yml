# Production-Ready Inventory Orchestrator Configuration
# Demonstrates PostgreSQL database adapter and OUTBOX strategy

orchestrator:
  # MANDATORY: Consumer configuration (app will fail to start without these)
  consumer:
    topic: inventory-input-topic
    group-id: inventory-orchestrator-group
    bootstrap-servers: localhost:9092  # Can be different from producer
    
  # MANDATORY: Producer configuration (app will fail to start without these)
  producer:
    topic: inventory-output-topic
    bootstrap-servers: localhost:9092  # Can be different from consumer
    
  # MANDATORY: Database configuration
  database:
    strategy: OUTBOX  # Different strategy than payment orchestrator

# Database Configuration - PostgreSQL (default for this orchestrator)
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/inventory_orchestrator
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  # Application Configuration
  application:
    name: inventory-orchestrator
    
  # Server Configuration (different port to avoid conflicts)
  server:
    port: 8081

# Kafka Configuration Overrides
spring.kafka:
  consumer:
    heartbeat-interval: 3s
    session-timeout: 10s
    max-poll-records: 500
    fetch-max-wait: 500ms
    auto-offset-reset: earliest
    enable-auto-commit: false
  
  producer:
    retries: 3
    batch-size: 16384
    linger-ms: 1
    buffer-memory: 33554432
    compression-type: snappy
    acks: all

# Logging Configuration
logging:
  level:
    com.orchestrator: INFO
    org.postgresql: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    
# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true